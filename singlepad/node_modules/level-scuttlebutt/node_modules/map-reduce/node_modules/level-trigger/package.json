{
  "name": "level-trigger",
  "version": "1.1.5",
  "homepage": "https://github.com/dominictarr/level-trigger",
  "repository": {
    "type": "git",
    "url": "git://github.com/dominictarr/level-trigger.git"
  },
  "dependencies": {
    "shasum": "0.0.2",
    "monotonic-timestamp": "0.0.8"
  },
  "devDependencies": {
    "macgyver": "~1.10.1",
    "rimraf": "~2.0.2",
    "level-sublevel": "~4.6.4",
    "tape": "~1.0.2",
    "level-test": "~1.1.1"
  },
  "scripts": {
    "test": "set -e; for t in test/*.js; do node $t; done"
  },
  "author": {
    "name": "'Dominic Tarr'",
    "email": "dominic.tarr@gmail.com",
    "url": "http://dominictarr.com"
  },
  "license": "MIT",
  "stability": "unstable",
  "readme": "# level-trigger\n\nTriggers for levelup.\n\n<img src=https://secure.travis-ci.org/dominictarr/level-trigger.png?branch=master>\n\nJobs must be idempotent!\nIf the process crashes before job has calledback,\nit will be rerun the next time it's started, for consistency!\n\n## Stability\n\nUnstable: Expect patches and features, possible api changes.\n\n# Example\n\n``` js\nvar db       = require('levelup')('/tmp/level-trigger-example')\nvar SubLevel = require('level-sublevel'); SubLevel(db) //MUST install sublevel.\nvar Trigger  = require('level-trigger')\n\nvar trigDb = Trigger(db, 'example', function (ch) {\n    //optionally index the job with a different key.\n    //if there are two jobs with the same key,\n    //it will only be triggered once.\n    return ch.key\n  },\n  function (value, done) { \n    //call done when job is done.\n    done()\n  }\n})\n\n//if you want, start the trigger in batch mode.\n//this will process all the keys in the input db.\n\n//otherwise, jobs will be processed whenever a key is inserted!\n\nif(require('optimist').argv.batch)\n  trigDb.start()\n\n```\n\n## License\n\nMIT\n\n\n\n",
  "readmeFilename": "README.md",
  "description": "Triggers for levelup.",
  "bugs": {
    "url": "https://github.com/dominictarr/level-trigger/issues"
  },
  "_id": "level-trigger@1.1.5",
  "dist": {
    "shasum": "9096c1390b42cd791e463d81c963d9b6f142b07a"
  },
  "_from": "level-trigger@~1.1.0",
  "_resolved": "https://registry.npmjs.org/level-trigger/-/level-trigger-1.1.5.tgz"
}
